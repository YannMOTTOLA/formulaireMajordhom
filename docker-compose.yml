# Lancer : docker compose -p majordhom --env-file .env.docker up -d

services:
  database:
    image: postgres:16
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - majordhom-network
    volumes:
      - majordhom-volume:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?schema=public
      - ALLOWED_ORIGINS=http://localhost:${CLIENT_PORT}
      - NODE_ENV=production
    networks:
      - majordhom-network
    ports:
      - "${API_PORT}:3000"
    depends_on:
      database:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:${API_PORT}
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT}:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - api
    networks:
      - majordhom-network

volumes:
  majordhom-volume:

networks:
  majordhom-network:
